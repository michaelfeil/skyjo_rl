name: Python3.9 pytest
# do not change name
on: 
  pull_request:
    branches:
    - master
    - dev
    
jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    env:
      WANDB_MODE: offline
      WANDB_ENTITY: senti_anal
      WANDB_PROJECT: BERT
      # WANDB_API_KEY=$YOUR_API_KEY
      WANDB_NAME: "github ci tests"
      WANDB_NOTES: "Python3.9 pytest in github actions"

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        cache: 'pip'
        cache-dependency-path: '**/requirements*.txt'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -e .
    
    - name: pull from dvc
      run: |
        # pull model and cache of dataset, to avoid downloading.
        dvc pull

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics    
    
    - name: test create shinx docs
      # create shpinx api autodocs of opensentiment and move them to docs
      # makefile: make html build the the docs/_build/html/
      run: |
        sphinx-apidoc -o ./docs ./opensentiment 
        cd docs
        make html

    - name: Generate Report
      run: |
        coverage run -m --source=./opensentiment pytest tests -m "not (download or long)"
        coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2

  gcp-workloads:
    name: gcp-deplyment
    runs-on: ubuntu-latest
    needs: [build-linux]

    permissions:
      contents: 'read'
      id-token: 'write'
    
    # if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
      with:
          path: 'branch-dir'
    # checkout repo
      
    - id: 'auth'
    # authenticate to google using this repo name 
    # https://github.com/google-github-actions/auth#examples (see workload federation)
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/346707017144/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: 'gh-service-account@sensi-anal.iam.gserviceaccount.com'
    # now authenticated to gcp

    # - id: 'upload-file'
    #   uses: 'google-github-actions/upload-cloud-storage@v0'
    #   with:
    #     path: './branch-dir/setup.py'
    #     destination: 'gs://model_senti_anal/gh-ci'
        
